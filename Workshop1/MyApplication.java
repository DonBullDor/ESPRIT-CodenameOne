package com.mycompany.myapp;

import com.codename1.components.ImageViewer;
import com.codename1.components.OnOffSwitch;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.CheckBox;
import com.codename1.ui.TextField;
import com.codename1.ui.util.UIBuilder;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }

        UIBuilder ui = new UIBuilder();
        UIBuilder.registerCustomComponent("imageViewer", ImageViewer.class);
        UIBuilder.registerCustomComponent("OnOffSwitch", OnOffSwitch.class);
        Form f = ui.createContainer(theme, "GUI 1")
                .getComponentForm();

        TextField nom = (TextField)ui.findByName("nom", f);
        TextField prenom = (TextField) ui.findByName("prenom", f);
        TextField Password = (TextField) ui.findByName("Password", f);
        OnOffSwitch Genre = (OnOffSwitch) ui.findByName("Genre", f);
        CheckBox foot = (CheckBox) ui.findByName("Foot", f);
        CheckBox lecture = (CheckBox) ui.findByName("Lecture", f);
        CheckBox tennis = (CheckBox) ui.findByName("Tennis", f);
        CheckBox natation = (CheckBox) ui.findByName("natation", f);
        Button button = (Button) ui.findByName("Button", f);
        f.show();
        Form f2 = ui.createContainer(theme, "GUI 2")
                .getComponentForm();

        Label lb1 = (Label) ui.findByName("Label1", f2);
        Label lb2 = (Label) ui.findByName("Label3", f2);
        Label lb3 = (Label) ui.findByName("Label5", f2);

        // button.addActionListener(x->f2.show());
        button.addActionListener(
                x -> {
                    f2.show();
                    lb1.setText(nom.getText());
                    lb2.setText(prenom.getText());

                    if (foot.isSelected()) {
                        lb3.setText("foot");
                    }
                    if (lecture.isSelected()) {
                        lb3.setText("Lecture");
                    }
                    if (tennis.isSelected()) {
                        lb3.setText("Tennis");
                    }
                    if (natation.isSelected()) {
                        lb3.setText("natation");
                    }
                }
        );
    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

}
